name: build
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version string
        id: get-version-string
        run: |
          git fetch --tags --force
          version="$(git describe --dirty)"
          echo "Version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Check Go version
        run: go version

      - name: Install Go dependencies
        run: go get .

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node dependencies
        run: npm ci

      - name: Run Makefile
        run: |
          make all multiarch

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: dist
          path: dist

  build-docker:
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version string
        id: get-version-string
        run: |
          git fetch --tags --force
          version="$(git describe --dirty)"
          echo "Version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node dependencies
        run: npm ci

      - name: Make frontend
        run: make fe

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.get-version-string.outputs.version }}

  build-snap:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        snap_arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version string
        id: get-version-string
        run: |
          git fetch --tags --force
          version="$(git describe --dirty)"
          echo "Version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Build snap
        id: snapcraft
        uses: canonical/action-build@v1
        with:
          snapcraft-args: "--platform ${{ matrix.snap_arch }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: snap-${{ matrix.snap_arch }}
          path: webtimer*.snap

  make-release:
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    needs:
      - build
      - build-snap

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          make_latest: true
          body: |
            Download the executable file for your system.
          files: dist/webtimer*
